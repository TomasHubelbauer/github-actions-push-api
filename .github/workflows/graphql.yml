on: push
name: graphql

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
    - name: Run the workflow script
      run: |
        # Make Bash print the commands as it is executing them
        set -x

        # https://docs.github.com/en/graphql/reference/input-objects#committablebranch
        BRANCH='{"repositoryNameWithOwner":"${{github.repository}}","branchName":"${{github.ref}}"}'
        
        # https://docs.github.com/en/graphql/reference/input-objects#commitmessage
        MESSAGE='{"headline":"Make a test commit using GQL","body":"This commit was created using a GitHub Actions workflow."}'
        
        CONTENT=$(echo "test" | base64 -0w 0)
        
        # https://docs.github.com/en/graphql/reference/input-objects#filechanges
        # https://docs.github.com/en/graphql/reference/input-objects#fileaddition
        # https://docs.github.com/en/graphql/reference/input-objects#filedeletion
        CHANGES='{"additions":[{"path":"gql-artifact-1","contents":"'$CONTENT'"},{"path":"gql-artifact-2","contents":"'$CONTENT'"}]}'
        
        # https://graphql.org/learn/queries/#variables
        VARIABLES='{"input":{"branch":'$BRANCH',"message":'$MESSAGE',"expectedHeadOid":"${{github.sha}}","fileChanges":'$CHANGES'}}'
        
        # https://docs.github.com/en/graphql/reference/objects#commit
        COMMIT='commit { commitUrl, author { email, name }, committer { email, name } }'
        
        # https://docs.github.com/en/graphql/reference/objects#ref
        REF='ref { name, prefix }'
        
        # https://docs.github.com/en/graphql/reference/mutations#createcommitonbranch
        MUTATION='mutation($input:CreateCommitOnBranchInput!){createCommitOnBranch(input:$input){'$COMMIT','$REF'}}'
        
        DATA='{"query":"'$MUTATION'","variables":'$VARIABLES'}'

        # Call the GitHub GQL API endpoint using the integration PAT token
        # https://docs.github.com/en/graphql/guides/forming-calls-with-graphql#communicating-with-graphql
        curl --no-progress-meter -H "Authorization: bearer ${{github.token}}" ${{github.graphql_url}} -d "$DATA"
