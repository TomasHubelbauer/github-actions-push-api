on: push

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Run the workflow script
        run: |
          # Make Bash print the commands as it is executing them
          set -x
          
          # Generate a unique name by using the current date and time instant
          DATE=$(date -Iseconds)
          
          # Replace "T" and colons with dashes to get a valid file name
          NAME=${DATE//[T:]/-}
          
          # Drop the time zone offset (it is always the same on the runner)
          NAME=${NAME:0:19}
          
          # Build the GitHub API URL using the GitHub Actions `github` context
          # https://docs.github.com/en/rest/reference/repos#create-or-update-file-contents
          # https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
          URL="${{github.api_url}}/repos/${{github.repository}}/contents/$NAME"
          
          # Build the JSON payload string to send to the GitHub API endpoint
          # https://docs.github.com/en/rest/reference/repos#create-or-update-file-contents
          MESSAGE="Make a flag file\n\nThis file is generated using the GitHub Actions workflow."
          CONTENT=$(echo $DATE | base64)
          DATA='{"message":"'$MESSAGE'","content":"'$CONTENT'"}'
          
          # Print the nascent cURL call with its options set up for manual review
          # -u: Configure authentication using the GitHub user name and PAT
          # https://docs.github.com/en/rest/guides/getting-started-with-the-rest-api#using-personal-access-tokens
          # -X: Set the HTTP method/verb to PUT as per the API documentation
          # -d: Send the provided JSON payload string as the API request body
          curl -u ${{github.repository_owner}}:${{github.token}} -X PUT $URL -d "$DATA"
